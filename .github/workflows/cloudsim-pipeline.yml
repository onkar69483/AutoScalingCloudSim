name: CloudSim CI/CD Pipeline

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build-and-run:
    runs-on: ubuntu-latest
    
    steps:
    # Step 1: Checkout code
    - name: Checkout Repository
      uses: actions/checkout@v3
    
    # Step 2: Set up Java
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
    
    # Step 3: Create directories
    - name: Create directories
      run: |
        mkdir -p bin
        mkdir -p results
    
    # Step 4: Compile the code
    - name: Compile code
      run: javac -Xlint:unchecked -cp "lib/cloudsim-3.0.3.jar" -d bin src/org/cloudbus/cloudsim/*.java
    
    # Step 5: Run the simulation
    - name: Run simulation
      run: java -cp "bin:lib/cloudsim-3.0.3.jar:lib/cloudsim-examples-3.0.3.jar" org.cloudbus.cloudsim.Main
    
    # Step 6: Create GitHub Pages content
    - name: Create GitHub Pages content
      run: |
        # Create the docs directory and basic content
        mkdir -p docs
        
        # Create a simple index.html
        echo "<!DOCTYPE html>
        <html>
        <head>
            <title>AutoScalingCloudSim Results</title>
            <style>
                body { font-family: Arial, sans-serif; max-width: 800px; margin: 0 auto; padding: 20px; }
                h1 { color: #333; }
                .results { margin-top: 20px; }
                table { width: 100%; border-collapse: collapse; }
                th, td { padding: 8px; text-align: left; border-bottom: 1px solid #ddd; }
                th { background-color: #f2f2f2; }
            </style>
        </head>
        <body>
            <h1>AutoScalingCloudSim Simulation Results</h1>
            <p>This page displays the results of the CloudSim simulation.</p>
            <div class='results'>
                <h2>Latest Simulation</h2>
                <p>Run date: $(date)</p>
            </div>
        </body>
        </html>" > docs/index.html
        
        # Copy simulation results if they exist
        if [ -f "results/simulation_results.csv" ]; then
          cp results/simulation_results.csv docs/
        else
          echo "No simulation results found" > docs/simulation_results.txt
        fi
        
        # Create .nojekyll file to disable Jekyll processing
        touch docs/.nojekyll
        
        # Check the contents of the docs directory
        echo "Contents of docs directory:"
        ls -la docs/
    
    # Step 7: Deploy to GitHub Pages (simpler approach)
    - name: Deploy to GitHub Pages
      uses: JamesIves/github-pages-deploy-action@v4
      with:
        folder: docs
        branch: gh-pages